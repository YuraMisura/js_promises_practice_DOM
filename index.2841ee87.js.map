{"mappings":"ACEA,IAAM,EAAc,SAAS,IAAI,CAEjC,SAAS,EAAW,CAAS,CAAE,CAAO,EACpC,EAAY,kBAAkB,CAAC,YAAc,oCAKvC,MAAA,CAHe,EAAU,kDAGjB,MAAA,CAAR,EAAQ,oBAGhB,CAEA,IAAM,EAAe,IAAI,QAAQ,SAAA,CAAjC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,GACF,EACF,GAEM,EAAqB,IAAI,QAAQ,SAAA,CAAvC,EACE,SAAS,gBAAgB,CAAC,cAAe,WACvC,GACF,EACF,GAYA,AAVqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,+BACnB,EAAG,IACL,GAGG,IAAI,CAAC,SAAA,CADR,EACmB,OAAA,EAAW,qBAAsB,EACjD,GAAA,KAAK,CAAC,SAAA,CAAN,EAAe,OAAA,EAAW,gBAAiB,E,GAE9C,QAAQ,IAAI,CAAC,CAAC,EAAc,EAAmB,EAC5C,IAAI,CAAC,WAAM,OAAA,EAAW,qBAAsB,8B,GAE/C,QAAQ,GAAG,CAAC,CAAC,EAAc,EAAmB,EAC3C,IAAI,CAAC,WAAM,OAAA,EAAW,qBAAsB,6B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar bodyElement = document.body;\nfunction addMessage(className, message) {\n    bodyElement.insertAdjacentHTML(\"beforeend\", '\\n    <div\\n      class=\"message '.concat(className, '\"\\n      data-qa=\"notification\"\\n    >\\n      ').concat(message, \"\\n    </div>\\n  \"));\n}\nvar clickPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar contextMenuPromise = new Promise(function(resolve) {\n    document.addEventListener(\"contextmenu\", function() {\n        resolve();\n    });\n});\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved!\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected!\"));\n    }, 3000);\n});\nfirstPromise.then(function(message) {\n    return addMessage(\"success message--1\", message);\n}).catch(function(error) {\n    return addMessage(\"error-message\", error);\n});\nPromise.race([\n    clickPromise,\n    contextMenuPromise\n]).then(function() {\n    return addMessage(\"success message--2\", \"Second promise was resolved\");\n});\nPromise.all([\n    clickPromise,\n    contextMenuPromise\n]).then(function() {\n    return addMessage(\"success message--3\", \"Third promise was resolved\");\n});\n\n//# sourceMappingURL=index.2841ee87.js.map\n","'use strict';\n\nconst bodyElement = document.body;\n\nfunction addMessage(className, message) {\n  bodyElement.insertAdjacentHTML('beforeend', `\n    <div\n      class=\"message ${className}\"\n      data-qa=\"notification\"\n    >\n      ${message}\n    </div>\n  `);\n}\n\nconst clickPromise = new Promise(resolve => {\n  document.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst contextMenuPromise = new Promise(resolve => {\n  document.addEventListener('contextmenu', () => {\n    resolve();\n  });\n});\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved!');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected!'));\n  }, 3000);\n});\n\nfirstPromise\n  .then(message => addMessage('success message--1', message))\n  .catch(error => addMessage('error-message', error));\n\nPromise.race([clickPromise, contextMenuPromise])\n  .then(() => addMessage('success message--2', 'Second promise was resolved'));\n\nPromise.all([clickPromise, contextMenuPromise])\n  .then(() => addMessage('success message--3', 'Third promise was resolved'));\n"],"names":["bodyElement","document","body","addMessage","className","message","insertAdjacentHTML","concat","clickPromise","Promise","resolve","addEventListener","contextMenuPromise","firstPromise","reject","setTimeout","Error","then","catch","error","race","all"],"version":3,"file":"index.2841ee87.js.map"}